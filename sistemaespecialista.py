# -*- coding: utf-8 -*-
"""sistemaespecialista

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oZBdHhi_KkWAjnab9cwn4dD4cRj4eM--
"""

class SistemaEspecialista:
    def __init__(self):
        """
        Inicializa o sistema especialista com um conjunto de regras.
        Cada doença é associada a um conjunto de sintomas característicos.
        """
        self.regras = {
            "gripe": {"febre", "tosse", "dor de garganta"},
            "covid": {"febre", "tosse", "falta de ar", "perda de olfato"},
            "resfriado": {"espirros", "nariz entupido", "dor de cabeça"},
            "dengue": {"febre", "dor muscular", "manchas na pele"},
        }

    def mostrar_variaveis(self):
        """
        Exibe todas as variáveis do sistema, ou seja, os sintomas cadastrados.
        """
        sintomas = {s for doenca in self.regras.values() for s in doenca}
        print("\nVariáveis do sistema (sintomas conhecidos):")
        for sintoma in sorted(sintomas):
            print(f"- {sintoma}")

    def mostrar_regras(self):
        """
        Exibe todas as regras do sistema, ou seja, as doenças e seus respectivos sintomas.
        """
        print("\nRegras do sistema (doenças e seus sintomas):")
        for doenca, sintomas in self.regras.items():
            print(f"- {doenca.capitalize()}: {', '.join(sintomas)}")

    def inferencia_progressiva(self):
        """
        Realiza a inferência progressiva: pergunta ao usuário sobre sintomas
        e tenta identificar uma doença com base nas respostas.
        """
        print("\nResponda 'sim' ou 'não' para os seguintes sintomas:")
        sintomas_usuario = set()  # Conjunto para armazenar sintomas informados pelo usuário

        # Coletar todos os sintomas possíveis das doenças cadastradas
        for sintoma in {s for doenca in self.regras.values() for s in doenca}:
            resposta = input(f"Você tem {sintoma}? ").strip().lower()
            if resposta == "sim":
                sintomas_usuario.add(sintoma)

        # Verifica quais doenças têm todos os sintomas informados pelo usuário
        doencas_possiveis = [doenca for doenca, sintomas in self.regras.items() if sintomas_usuario.issuperset(sintomas)]

        # Exibe o diagnóstico provável ou informa que não há correspondência exata
        if doencas_possiveis:
            print(f"\nDiagnóstico provável: {', '.join(doencas_possiveis)}")
        else:
            print("\nNenhuma doença identificada com os sintomas fornecidos.")

    def inferencia_regressiva(self):
        """
        Realiza a inferência regressiva: pergunta ao usuário sobre os sintomas
        de uma doença específica para confirmar se ele pode ter essa condição.
        """
        doenca = input("\nQual doença deseja verificar? ").strip().lower()

        if doenca in self.regras:
            print(f"\nPara confirmar {doenca}, responda:")

            # Verifica se o usuário apresenta todos os sintomas necessários
            for sintoma in self.regras[doenca]:
                resposta = input(f"Você tem {sintoma}? ").strip().lower()
                if resposta != "sim":
                    print(f"\nVocê não apresenta todos os sintomas de {doenca}.")
                    return  # Sai da função se um sintoma estiver ausente

            print(f"\nDiagnóstico confirmado para {doenca}.")
        else:
            print("\nDoença não encontrada no sistema.")


# Inicializa o sistema especialista e exibe um menu interativo
sistema = SistemaEspecialista()
while True:
    print("\n==== MENU ====")
    print("1 - Inferência Progressiva")
    print("2 - Inferência Regressiva")
    print("3 - Mostrar Variáveis (Sintomas)")
    print("4 - Mostrar Regras (Doenças e Sintomas)")
    print("5 - Sair")

    opcao = input("Escolha uma opção: ").strip()

    if opcao == "1":
        sistema.inferencia_progressiva()
    elif opcao == "2":
        sistema.inferencia_regressiva()
    elif opcao == "3":
        sistema.mostrar_variaveis()
    elif opcao == "4":
        sistema.mostrar_regras()
    elif opcao == "5":
        print("\nSaindo do sistema...")
        break  # Sai do loop e encerra o programa
    else:
        print("\nOpção inválida. Tente novamente.")